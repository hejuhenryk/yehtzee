{"version":3,"sources":["actions.ts","Die.tsx","Dies.tsx","App.tsx","index.tsx"],"names":["createAction","type","payload","undefined","Die","dieInfo","clickHandler","id","value","isFrozen","isSpinning","diceView","1","faDiceOne","2","faDiceTwo","3","faDiceThree","4","faDiceFour","5","faDiceFive","6","faDiceSix","StyledDieButton","onClick","icon","RollingAnimation","keyframes","styled","button","p","Dies","DivStyled","dice","map","d","div","actions","getRandomDie","Math","random","getDieValue","floor","initialState","rollsLeft","totalScores","scores","Ones","Twos","Threes","Fours","Fives","Sixes","ThreeOfKind","FourOfKind","Chance","FullHouse","Yahtzee","LowStraight","HighStraight","extendObject","baseObject","delta","reducer","state","action","extState","rule","score","total","key","PanelStyled","ScoreItemStyled","TotalScoreParagraf","ReactDOM","render","useReducer","game","gameDispatch","useEffect","spinn","obj","handleCalc","SameType","freqance","dict","forEach","die","Object","values","reduce","sum","freq","length","includes","valuse","getRule","useCallback","setTimeout","className","disabled","left","calcRoundsLeft","style","flexDirection","alignItems","keys","document","getElementById"],"mappings":"wQAKO,SAASA,EAAaC,EAAWC,GACpC,YAAmBC,IAAZD,EAAwB,CAAED,OAAMC,WAAY,CAAED,Q,qiBCalD,IAAMG,EAA8B,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAC3CC,EAAmCF,EAAnCE,GAAIC,EAA+BH,EAA/BG,MAAOC,EAAwBJ,EAAxBI,SAAUC,EAAcL,EAAdK,WAExBC,EAAW,CACfC,EAAGC,IACHC,EAAGC,IACHC,EAAGC,IACHC,EAAGC,IACHC,EAAGC,IACHC,EAAGC,KAIL,OACE,kBAACC,EAAD,CAAiBd,WAAYA,EAAYD,SAAUA,EAAUgB,QAAS,kBAAInB,EAAaC,KACrF,kBAAC,IAAD,CAAiBmB,KAAMf,EAASH,OAKhCmB,EAAmBC,YAAH,KAUhBJ,EAAkBK,IAAOC,OAAV,KAQR,SAAAC,GAAC,OAAIA,EAAEtB,SAAW,YAAc,aAC/B,SAAAsB,GAAC,OAAIA,EAAEtB,SAAW,OAAS,0CACxB,SAAAsB,GAAC,OAAIA,EAAEtB,SAAW,sBAAwB,UAIzC,SAAAsB,GAAC,OAAKA,EAAErB,aAAeqB,EAAEtB,UAAakB,K,2TCrDjD,IAAMK,EAAgC,SAAAD,GAC3C,OACE,kBAACE,EAAD,KACGF,EAAEG,KAAKC,KAAI,SAAAC,GAAC,OACX,kBAAC,EAAD,CAAK/B,QAAS+B,EAAG9B,aAAcyB,EAAEzB,oBAMnC2B,EAAYJ,IAAOQ,IAAV,K,6oCCqBf,IAAMC,EACK,kBAAMtC,EAAa,YADxBsC,EAEU,SAAC/B,GAAD,OAAuBP,EAAa,eAAgBO,IAF9D+B,EAGS,SAAC/B,GAAD,OAAuBP,EAAa,cAAeO,IAH5D+B,EAIS,kBAAMtC,EAAa,gBAJ5BsC,EAKQ,SAACP,GAAD,OACV/B,EAAa,aAAc+B,IANzBO,EAOQ,kBAAMtC,EAAa,eAP3BsC,EAQO,kBAAMtC,EAAa,cAI1BuC,EAAe,WACnB,MAAO,CACLhC,GAAG,OAAD,OAASiC,KAAKC,UAChBjC,MAAOkC,IACPjC,UAAU,EACVC,YAAY,IAIVgC,EAAc,kBAAOF,KAAKG,MAAsB,EAAhBH,KAAKC,UAAgB,GAgFrDG,EAA0B,CAC9BV,KAAM,CACJK,IACAA,IACAA,IACAA,IACAA,KAEFM,UAAW,EACXC,YAAa,EACbC,OAAQ,CACNC,UAAM7C,EACN8C,UAAM9C,EACN+C,YAAQ/C,EACRgD,WAAOhD,EACPiD,WAAOjD,EACPkD,WAAOlD,EACPmD,iBAAanD,EACboD,gBAAYpD,EACZqD,YAAQrD,EACRsD,eAAWtD,EACXuD,aAASvD,EACTwD,iBAAaxD,EACbyD,kBAAczD,IAIZ0D,EAAe,SAAgBC,GAAhB,OAAkC,SACrDC,GADqD,sBAEzCD,EAFyC,GAE1BC,KAEvBC,EAAU,SAACC,EAAkBC,GACjC,IAAMC,EAAWN,EAAaI,GAC9B,OAAQC,EAAOjE,MACb,IAAK,UACH,IAAM4C,EAAaoB,EAAMpB,UACrBoB,EAAMpB,UAAY,EAClB,EAIJ,OAAOsB,EAAS,CAAEjC,KAHL+B,EAAM/B,KAAKC,KAAI,SAAAC,GAAC,OAC3BA,EAAE3B,SAAF,eAAkB2B,GAAlB,eAA6BA,EAA7B,CAAgC5B,MAAOkC,SAEjBG,cAE1B,IAAK,eAEH,OAAOsB,EAAS,CACdjC,KAAM+B,EAAM/B,KAAKC,KAAI,SAAAC,GAAC,OACpBA,EAAE7B,KAAO2D,EAAOhE,QAAhB,eAA+BkC,EAA/B,CAAkC3B,UAAW2B,EAAE3B,WAAa2B,OAIlE,IAAK,cACH,OAAO+B,EAAS,CAACjC,KAAM+B,EAAM/B,KAAKC,KAAK,SAAAC,GAAC,OAAGA,EAAE7B,KAAO2D,EAAOhE,QAAhB,eAA+BkC,EAA/B,CAAkC1B,YAAa0B,EAAE1B,aAAc0B,OAC5G,IAAK,cACH,OAAO+B,EAAS,CACdjC,KAAM+B,EAAM/B,KAAKC,KAAI,SAAAC,GAAC,sBAAUA,EAAV,CAAa3B,UAAU,SAEjD,IAAK,aAAL,MAC0ByD,EAAOhE,QAAvBkE,EADV,EACUA,KAAMC,EADhB,EACgBA,MAEd,OAAOF,EAAS,CAAEpB,OADHc,EAAaI,EAAMlB,OAAnBc,CAAA,eAA8BO,EAAOC,MAEtD,IAAK,aACH,OAAOF,EAAS,CAAEtB,UAAW,IAC/B,IAAK,YACH,IAAIyB,EAAQ,EACZ,IAAK,IAAMC,KAAON,EAAMlB,YACY5C,IAA9B8D,EAAMlB,OAAOwB,KACfD,GAASL,EAAMlB,OAAOwB,IAG1B,OAAOJ,EAAS,CAAErB,YAAawB,IACjC,QACE,OAAOL,IAqFPO,EAAc3C,IAAOQ,IAAV,KA4BXoC,EAAkB5C,IAAOQ,IAAV,KAcfqC,EAAqB7C,IAAOE,EAAV,KChVxB4C,IAASC,OAAO,mBDqNa,WAAO,IAAD,EACJC,qBAAWb,EAASpB,GADhB,mBAC1BkC,EAD0B,KACpBC,EADoB,KAGjCC,qBAAW,WACTC,MACC,IAEH,IAuC6BC,EAhCvBC,EAAa,SAACjD,EAAiBkC,GAEnC,IAAMC,EAzKM,SAACD,GACf,IAOKgB,EAPCC,EAAW,SAACnD,GAChB,IAAMoD,EAAkC,GAIxC,OAHApD,EAAKqD,SAAQ,SAAAC,GAAG,YACMrF,IAApBmF,EAAKE,EAAIhF,OAAuB8E,EAAKE,EAAIhF,SAAY8E,EAAKE,EAAIhF,OAAS,KAElEiF,OAAOC,OAAOJ,IAUvB,OAhB8B,SAQzBF,OARyB,eAQzBA,IARyB,eAQzBA,IARyB,mBAQzBA,IARyB,iBAQzBA,IARyB,iBAQzBA,IARyB,kBAQzBA,MARyB,KAgBtBhB,GACN,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,QAEH,OAAO,SAAClC,GAAD,OACLA,EAAKyD,QACH,SAACtB,EAAOmB,GAAR,OACEA,EAAIhF,QAAU4E,EAAShB,GAAQC,EAAQe,EAAShB,GAAQC,IAC1D,IAEN,IAAK,cACH,OAAO,SAACnC,GACN,IAAM0D,EAAM1D,EAAKyD,QAAO,SAACtB,EAAOmB,GAAR,OAAgBnB,EAAQmB,EAAIhF,QAAO,GACrDqF,EAAOR,EAASnD,GACtB,OACE0D,GACCC,EAAKC,OAAS,EAAI,EAAoB,IAAhBD,EAAKC,QAAgBD,EAAKE,SAAS,GAAK,EAAI,IAIzE,IAAK,aACH,OAAO,SAAC7D,GACN,IAAM0D,EAAM1D,EAAKyD,QAAO,SAACtB,EAAOmB,GAAR,OAAgBnB,EAAQmB,EAAIhF,QAAO,GACrDqF,EAAOR,EAASnD,GACtB,OAAO0D,GAAOC,EAAKE,SAAS,IAAMF,EAAKE,SAAS,GAAK,EAAI,IAG7D,IAAK,SACH,OAAO,SAAC7D,GAAD,OACLA,EAAKyD,QAAO,SAACtB,EAAOmB,GAAR,OAAgBnB,EAAQmB,EAAIhF,QAAO,IACnD,IAAK,YACH,OAAO,SAAC0B,GAAD,OACLmD,EAASnD,GAAM6D,SAAS,IAAMV,EAASnD,GAAM6D,SAAS,GAAK,GAAK,GACpE,IAAK,UACH,OAAO,SAAC7D,GAAD,OAAsBmD,EAASnD,GAAM6D,SAAS,GAAK,GAAK,GACjE,IAAK,cACH,OAAO,SAAC7D,GACN,IAAM8D,EAAS9D,EAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAE5B,SAC/B,OAAIwF,EAAOD,SAAS,IAAMC,EAAOD,SAAS,GACpCC,EAAOD,SAAS,KAAOC,EAAOD,SAAS,IAAMC,EAAOD,SAAS,IACxD,GACAC,EAAOD,SAAS,IAAMC,EAAOD,SAAS,GAAW,GAC9C,EACA,GAElB,IAAK,eACH,OAAO,SAAC7D,GAAD,OACqB,IAA1BmD,EAASnD,GAAM4D,QACb5D,EAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAE5B,SAAOuF,SAAS,IAC/B7D,EAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAE5B,SAAOuF,SAAS,GAE/B,EADA,IAER,QACE,OAAO,SAAC7D,GAAD,OAAqB,IAgGhB+D,CAAQ7B,EAAR6B,CAAc/D,GAG5B6C,EAAazC,EAAmB,CAAE+B,QAAOD,UAEzCW,EAAazC,KAEbyC,EAAazC,KAEbyC,EAAazC,KACbyC,EAAazC,KAEb2C,KAGIA,EAAQiB,uBACV,WACEpB,EAAK5C,KAAKqD,SAAS,SAAAnD,GAAC,OAAI2C,EAAazC,EAAoBF,EAAE7B,QAC3D4F,YAAY,kBAAIrB,EAAK5C,KAAKqD,SAAS,SAAAnD,GAAC,OAAI2C,EAAazC,EAAoBF,EAAE7B,UAAO,OACpF,CAACuE,EAAK5C,OAYV,OACE,yBAAKkE,UAAU,OACb,kBAAC,EAAD,CACElE,KAAM4C,EAAK5C,KACX5B,aAAc,SAACC,GAAD,OAAgBwE,EAAazC,EAAqB/B,OAElE,kBAACiE,EAAD,KACE,4BAAQ/C,QA/CK,WACbqD,EAAKjC,YACPoC,IACAF,EAAazC,OA4CkB+D,SAA6B,IAAnBvB,EAAKjC,WAA5C,YACYiC,EAAKjC,UADjB,aACsC,KAEtC,4BAAQpB,QAAS,kBAAMsD,EAAazC,OAApC,eAGA,2CAtBiB,WACrB,IAAIgE,EAAO,EACX,IAAK,IAAM/B,KAAOO,EAAK/B,YACU5C,IAA7B2E,EAAK/B,OAAOwB,IAA8B+B,IAE9C,OAAOA,EAiBcC,KAGnB,kBAAC/B,EAAD,CAAagC,MAAO,CAAEC,cAAe,SAAUC,WAAY,YAjBlCxB,EAmBjBJ,EAAK/B,OAnBuC0C,OAAOkB,KAAKzB,IAmB3C/C,KAAI,SAAAiC,GAAI,OACzB,kBAACK,EAAD,CAAiBF,IAAKH,GACpB,2BAAIA,GAC0B,qBAAtBU,EAAK/B,OAAOqB,GAClB,4BAAQ3C,QAAS,kBAAM0D,EAAWL,EAAK5C,KAAMkC,KAA7C,OAEA,2BAAIU,EAAK/B,OAAOqB,QAItB,kBAACM,EAAD,qBAAkCI,EAAKhC,iBChS/B,MAAS8D,SAASC,eAAe,W","file":"static/js/main.9d78a6ea.chunk.js","sourcesContent":["interface TypedAction<A = string> { type: A }\r\ninterface TypePayloadAction<A, P> extends TypedAction<A> { payload: P }\r\n\r\nexport function createAction<A extends string>(type: A): TypedAction<A>\r\nexport function createAction<P, A extends string>(type: A, payload: P): TypePayloadAction<A, P>\r\nexport function createAction(type: any, payload?: any) {\r\n    return payload !== undefined ? { type, payload } : { type }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faDiceOne,\r\n  faDiceTwo,\r\n  faDiceThree,\r\n  faDiceFour,\r\n  faDiceFive,\r\n  faDiceSix\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {DieType} from './App'\r\n\r\ntype DiePropsType = {\r\n    dieInfo: DieType ;\r\n    clickHandler: (id: string)=>void\r\n}\r\n\r\nexport const Die: React.FC<DiePropsType> = ({dieInfo, clickHandler}) => {\r\n    const {id, value, isFrozen, isSpinning} = dieInfo\r\n    // const [isSpinning, setIsSpinning] = useState(false);\r\n  const diceView = {\r\n    1: faDiceOne,\r\n    2: faDiceTwo,\r\n    3: faDiceThree,\r\n    4: faDiceFour,\r\n    5: faDiceFive,\r\n    6: faDiceSix\r\n  };\r\n\r\n\r\n  return (\r\n    <StyledDieButton isSpinning={isSpinning} isFrozen={isFrozen} onClick={()=>clickHandler(id)}>\r\n      <FontAwesomeIcon icon={diceView[value]} />\r\n    </StyledDieButton>\r\n  );\r\n};\r\n\r\nconst RollingAnimation = keyframes`\r\n  0% {\r\n    transform: rotate(0deg)\r\n  }\r\n  100% {\r\n    transform: rotate(360deg)\r\n  }\r\n`\r\n\r\n\r\nconst StyledDieButton = styled.button<{isSpinning: boolean, isFrozen: boolean}>`\r\n    margin: 1rem;\r\n    border: none;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    height: 4rem;\r\n    font-size: 4rem;\r\n    background-color: transparent;\r\n    color: ${p => p.isFrozen ? '#5D0A8Bde' : '#5D0A8B'};\r\n    filter: ${p => p.isFrozen ? 'none' : 'drop-shadow(.3rem .3rem .3rem black)'};\r\n    transform: ${p => p.isFrozen ? 'translate(2px, 2px)' : 'none'};\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    animation: ${ p => (p.isSpinning && !p.isFrozen) && RollingAnimation } .5s infinite;\r\n\r\n`;\r\n","import React from \"react\";\r\nimport { DieType } from \"./App\";\r\nimport { Die } from \"./Die\";\r\nimport styled from \"styled-components\";\r\n\r\ntype DicePropsType = {\r\n  dice: DieType[];\r\n  clickHandler: (id: string) => void;\r\n};\r\n\r\nexport const Dies: React.FC<DicePropsType> = p => {\r\n  return (\r\n    <DivStyled>\r\n      {p.dice.map(d => (\r\n        <Die dieInfo={d} clickHandler={p.clickHandler} />\r\n      ))}\r\n    </DivStyled>\r\n  );\r\n};\r\n\r\nconst DivStyled = styled.div`\r\n  background-color: silver;\r\n  display: flex;\r\n  padding: 4rem;\r\n  width: 60%;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0.5rem auto;\r\n  margin: 0.8rem auto;\r\n  border: 1px solid black;\r\n  box-shadow: #444 0.3rem 0.3rem 1rem;\r\n`;\r\n","import React, { useReducer, useEffect , useCallback} from \"react\";\nimport \"./App.css\";\nimport { createAction } from \"./actions\";\nimport { Dies } from \"./Dies\";\nimport styled from \"styled-components\";\n\ntype DieValue = 1 | 2 | 3 | 4 | 5 | 6;\ntype RollsLeft = 0 | 1 | 2 | 3;\ntype Rule =\n  | \"Ones\"\n  | \"Twos\"\n  | \"Threes\"\n  | \"LowStraight\"\n  | \"HighStraight\"\n  | \"Fours\"\n  | \"Fives\"\n  | \"Sixes\"\n  | \"ThreeOfKind\"\n  | \"FourOfKind\"\n  | \"Chance\"\n  | \"FullHouse\"\n  | \"Yahtzee\";\n\nexport type DieType = {\n  id: string;\n  value: DieValue;\n  isFrozen: boolean;\n  isSpinning: boolean;\n};\n\ntype Scores = {\n  [key in Rule]: number | undefined;\n};\n\ntype GameState = {\n  dice: DieType[];\n  rollsLeft: RollsLeft;\n  totalScores: number;\n  scores: Scores;\n};\n\nconst actions = {\n  rollAll: () => createAction(\"rollAll\"),\n  freezeToggle: (id: DieType[\"id\"]) => createAction(\"freezeToggle\", id),\n  spinnToogle: (id: DieType[\"id\"]) => createAction(\"spinnToogle\", id),\n  unfreezeAll: () => createAction(\"unfreezeAll\"),\n  calcPoints: (p: { score: number; rule: Rule }) =>\n    createAction(\"calcPoints\", p),\n  resetRolls: () => createAction(\"resetRolls\"),\n  calcTotal: () => createAction(\"calcTotal\")\n};\ntype Actions = ReturnType<typeof actions[keyof typeof actions]>;\n\nconst getRandomDie = (): DieType => {\n  return {\n    id: `die-${Math.random()}`,\n    value: getDieValue(),\n    isFrozen: false,\n    isSpinning: false\n  };\n};\n\nconst getDieValue = () => (Math.floor(Math.random() * 6) + 1) as DieValue;\n\n\nconst getRule = (rule: Rule) => {\n  const freqance = (dice: DieType[]) => {\n    const dict: { [key: number]: number } = {};\n    dice.forEach(die =>\n      dict[die.value] !== undefined ? dict[die.value]++ : (dict[die.value] = 1)\n    );\n    return Object.values(dict);\n  };\n  enum SameType {\n    Ones = 1,\n    Twos,\n    Threes,\n    Fours,\n    Fives,\n    Sixes\n  }\n  switch (rule) {\n    case \"Ones\":\n    case \"Twos\":\n    case \"Threes\":\n    case \"Fours\":\n    case \"Fives\":\n    case \"Sixes\":\n      // console.log(rule);\n      return (dice: DieType[]) =>\n        dice.reduce(\n          (score, die) =>\n            die.value === SameType[rule] ? score + SameType[rule] : score,\n          0\n        );\n    case \"ThreeOfKind\": {\n      return (dice: DieType[]) => {\n        const sum = dice.reduce((score, die) => score + die.value, 0);\n        const freq = freqance(dice);\n        return (\n          sum *\n          (freq.length < 3 ? 1 : freq.length === 3 && freq.includes(3) ? 1 : 0)\n        );\n      };\n    }\n    case \"FourOfKind\": {\n      return (dice: DieType[]) => {\n        const sum = dice.reduce((score, die) => score + die.value, 0);\n        const freq = freqance(dice);\n        return sum * (freq.includes(5) || freq.includes(4) ? 1 : 0);\n      };\n    }\n    case \"Chance\":\n      return (dice: DieType[]) =>\n        dice.reduce((score, die) => score + die.value, 0);\n    case \"FullHouse\":\n      return (dice: DieType[]) =>\n        freqance(dice).includes(3) && freqance(dice).includes(2) ? 25 : 0;\n    case \"Yahtzee\":\n      return (dice: DieType[]) => (freqance(dice).includes(5) ? 50 : 0);\n    case \"LowStraight\":\n      return (dice: DieType[]) => {\n        const valuse = dice.map(d => d.value);\n        if (valuse.includes(3) && valuse.includes(3)) {\n          if (valuse.includes(2) && (valuse.includes(1) || valuse.includes(5)))\n            return 30;\n          else if (valuse.includes(6) && valuse.includes(5)) return 30;\n          else return 0;\n        } else return 0;\n      };\n    case \"HighStraight\":\n      return (dice: DieType[]) =>\n        freqance(dice).length === 5 &&\n        (!dice.map(d => d.value).includes(6) ||\n          !dice.map(d => d.value).includes(1))\n          ? 40\n          : 0;\n    default:\n      return (dice: DieType[]) => 0;\n  }\n};\n\nconst initialState: GameState = {\n  dice: [\n    getRandomDie(),\n    getRandomDie(),\n    getRandomDie(),\n    getRandomDie(),\n    getRandomDie()\n  ],\n  rollsLeft: 3,\n  totalScores: 0,\n  scores: {\n    Ones: undefined,\n    Twos: undefined,\n    Threes: undefined,\n    Fours: undefined,\n    Fives: undefined,\n    Sixes: undefined,\n    ThreeOfKind: undefined,\n    FourOfKind: undefined,\n    Chance: undefined,\n    FullHouse: undefined,\n    Yahtzee: undefined,\n    LowStraight: undefined,\n    HighStraight: undefined\n  }\n};\n\nconst extendObject = <T extends any>(baseObject: T) => (\n  delta: Partial<T>\n): T => ({ ...baseObject, ...delta });\n\nconst reducer = (state: GameState, action: Actions) => {\n  const extState = extendObject(state);\n  switch (action.type) {\n    case \"rollAll\": {\n      const rollsLeft = (state.rollsLeft\n        ? state.rollsLeft - 1\n        : 0) as RollsLeft;\n      const dice = state.dice.map(d =>\n        d.isFrozen ? { ...d } : { ...d, value: getDieValue() }\n      );\n      return extState({ dice, rollsLeft });\n    }\n    case \"freezeToggle\": {\n      // const dice\n      return extState({\n        dice: state.dice.map(d =>\n          d.id === action.payload ? { ...d, isFrozen: !d.isFrozen } : d\n        )\n      });\n    }\n    case \"spinnToogle\":\n      return extState({dice: state.dice.map( d=> d.id === action.payload ? { ...d, isSpinning: !d.isSpinning} : d )})\n    case \"unfreezeAll\":\n      return extState({\n        dice: state.dice.map(d => ({ ...d, isFrozen: false }))\n      });\n    case \"calcPoints\":\n      const { rule, score } = action.payload;\n      const scores = extendObject(state.scores)({ [rule]: score });\n      return extState({ scores });\n    case \"resetRolls\":\n      return extState({ rollsLeft: 3 });\n    case \"calcTotal\":\n      let total = 0;\n      for (const key in state.scores) {\n        if (state.scores[key as Rule] !== undefined)\n          total += state.scores[key as Rule]!;\n      }\n\n      return extState({ totalScores: total });\n    default:\n      return state;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [game, gameDispatch] = useReducer(reducer, initialState);\n\n  useEffect( () => {\n    spinn()\n  }, [])\n\n  const handleRoll = () => {\n    if (game.rollsLeft) {\n      spinn()\n      gameDispatch(actions.rollAll());\n\n    }\n  };\n  const handleCalc = (dice: DieType[], rule: Rule) => {\n    //calculate\n    const score = getRule(rule)(dice);\n    //update scores\n    // gameDispatch({type: 'CALC_POINTS', score, rule})\n    gameDispatch(actions.calcPoints({ score, rule }));\n    //unfreez\n    gameDispatch(actions.unfreezeAll());\n    //rollAll\n    gameDispatch(actions.rollAll());\n    //restart rolls\n    gameDispatch(actions.resetRolls());\n    gameDispatch(actions.calcTotal());\n    //animate\n    spinn()\n  };\n\n  const spinn = useCallback(\n      () => {\n        game.dice.forEach( d => gameDispatch(actions.spinnToogle(d.id)))\n        setTimeout( ()=>game.dice.forEach( d => gameDispatch(actions.spinnToogle(d.id))), 500 )\n    },[game.dice]\n  )\n\n  const calcRoundsLeft = () => {\n    let left = 0\n    for (const key in game.scores) {\n        game.scores[key as Rule] === undefined && left++  \n    }\n    return left\n  }\n\n  const keys = <T extends any>(obj: T): Array<keyof T> => Object.keys(obj);\n  return (\n    <div className=\"App\">\n      <Dies\n        dice={game.dice}\n        clickHandler={(id: string) => gameDispatch(actions.freezeToggle(id))}\n      />\n      <PanelStyled>\n        <button onClick={handleRoll} disabled={game.rollsLeft === 0}>\n          You have {game.rollsLeft} rols left{\" \"}\n        </button>\n        <button onClick={() => gameDispatch(actions.unfreezeAll())}>\n          unfreez all\n        </button>\n        <p>Rounds left: {calcRoundsLeft()}</p>\n      </PanelStyled>\n\n      <PanelStyled style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n        {/* [\"Ones\", \"Twos\", \"Threes\"] => [[\"Ones\", undefined],...] */}\n        {keys(game.scores).map(rule => (\n          <ScoreItemStyled key={rule}>\n            <p>{rule}</p>\n            {typeof game.scores[rule] === \"undefined\" ? (\n              <button onClick={() => handleCalc(game.dice, rule)}>use</button>\n            ) : (\n              <p>{game.scores[rule]}</p>\n            )}\n          </ScoreItemStyled>\n        ))}\n        <TotalScoreParagraf>Total Score: {game.totalScores}</TotalScoreParagraf>\n      </PanelStyled>\n    </div>\n  );\n};\n\nconst PanelStyled = styled.div`\n  background-color: silver;\n  display: flex;\n  padding: 1rem 4rem;\n  width: 60%;\n  overflow: hidden;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 0.8rem auto;\n  border: 1px solid black;\n  box-shadow: #444 0.3rem 0.3rem 1rem;\n  button {\n    padding: 0.5rem 1rem;\n    margin: 0.3rem;\n    background-color: white;\n    border: 1px solid black;\n    border-radius: 5px;\n    text-transform: uppercase;\n    cursor: pointer;\n    :focus {\n      outline: none;\n    }\n  }\n  p {\n    margin-left: 2rem;\n  }\n`;\n\nconst ScoreItemStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 0.2rem;\n  border-bottom: 1px black dotted;\n  button {\n    padding: 0.2rem 0.3rem;\n    margin: 0.3rem;\n  }\n  p {\n    margin: 0.2rem;\n  }\n`;\nconst TotalScoreParagraf = styled.p`\n  ::before {\n    content: \"\";\n    display: inline-block;\n    width: 200%;\n    height: 100%;\n    margin: 0 auto;\n    transform: translate(-25%);\n    border-bottom: 1px solid #000;\n  }\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}